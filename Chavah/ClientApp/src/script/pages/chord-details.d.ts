import { RouterLocation } from "@vaadin/router";
import { TemplateResult } from "lit";
import { BootstrapBase } from "../common/bootstrap-base";
import { ChordSheet } from "../models/interfaces";
import { ChordService } from "../services/chord-service";
import { ChordCache } from "../services/chord-cache";
import { ChordChartLine, ChordChartSpan } from "../models/chord-chart-line";
export declare class ChordDetails extends BootstrapBase {
    static get styles(): import("lit").CSSResultGroup[];
    chord: ChordSheet | null;
    error: string | null;
    canGoFullScreen: boolean | null;
    isWebPublished: boolean;
    hasScreenshots: boolean;
    transpose: number;
    location: RouterLocation | null;
    chordChartLines: ChordChartLine[] | null;
    readonly chordService: ChordService;
    readonly chordCache: ChordCache;
    constructor();
    firstUpdated(): void;
    chordSheetLoaded(chord: ChordSheet): void;
    chordSheetLoadFailed(error: any): void;
    render(): TemplateResult;
    renderPrintableScreenshots(): TemplateResult;
    renderLoading(): TemplateResult;
    renderError(): TemplateResult;
    renderChordDetails(chord: ChordSheet): TemplateResult;
    renderPlayButton(chord: ChordSheet): TemplateResult;
    renderFullScreenButton(): TemplateResult;
    renderOpenInGDriveButton(chord: ChordSheet): TemplateResult;
    renderTransposeButtons(chord: ChordSheet): TemplateResult;
    renderChordPreviewer(chord: ChordSheet): TemplateResult;
    renderPlainTextPreviewer(chord: ChordSheet): TemplateResult;
    renderPlainTextLine(line: ChordChartLine): TemplateResult;
    renderPlainTextLyricLine(chordLine: ChordChartLine): TemplateResult;
    renderPlainTextChordLine(chordLine: ChordChartLine): TemplateResult;
    renderPlainTextLyricSpan(span: ChordChartSpan): TemplateResult<1>;
    renderPlainTextSpan(span: ChordChartSpan): TemplateResult;
    renderGDocPreviewer(chord: ChordSheet): TemplateResult;
    renderImagePreviewer(imgSrc: string): TemplateResult;
    renderScreenshots(chord: ChordSheet): TemplateResult;
    renderOfflinePreviewer(chord: ChordSheet): TemplateResult;
    loadChordSheet(): Promise<ChordSheet>;
    get iframeUrl(): string;
    get pageClass(): string;
    get iframeClass(): string;
    cacheChordForOfflineSearch(chord: ChordSheet): void;
    print(): void;
    downloadUrl(chord: ChordSheet): string;
    goFullscreen(): void;
    getChordChartLines(chord: ChordSheet): ChordChartLine[];
    bumpTranspose(increment: 1 | -1): void;
}
