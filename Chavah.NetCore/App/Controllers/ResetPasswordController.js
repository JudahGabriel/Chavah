var BitShuva;
(function (BitShuva) {
    var Chavah;
    (function (Chavah) {
        var ResetPasswordController = (function () {
            function ResetPasswordController(accountApi, $routeParams) {
                this.accountApi = accountApi;
                this.$routeParams = $routeParams;
                this.email = "";
                this.password = "";
                this.showPasswordError = false;
                this.isBusy = false;
                this.passwordResetSucccessful = false;
                this.passwordResetFailed = false;
                this.passwordResetFailedMessage = "";
                this.email = $routeParams["email"];
                var rawConfirmCode = $routeParams["confirmCode"];
                // The confirm code is generated by WebAPI. We manually replace any forward slashes with triple underscore,
                // otherwise the Angular route gets busted, even with encodeURIComponent.
                var escapedConfirmCode = $routeParams["confirmCode"] || "";
                this.confirmCode = escapedConfirmCode.replace(new RegExp("___", "g"), "/"); // Put the forward slash(s) back in.
            }
            Object.defineProperty(ResetPasswordController.prototype, "isValidPassword", {
                get: function () {
                    return !!this.password && this.password.length >= 6;
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(ResetPasswordController.prototype, "showChangePasswordForm", {
                get: function () {
                    return !this.passwordResetSucccessful && !this.passwordResetFailed;
                },
                enumerable: true,
                configurable: true
            });
            ResetPasswordController.prototype.changePassword = function () {
                var _this = this;
                if (!this.isValidPassword) {
                    this.showPasswordError = true;
                    return;
                }
                if (!this.isBusy) {
                    this.resetValidationStates();
                    this.isBusy = true;
                    this.accountApi.resetPassword(this.email, this.confirmCode, this.password)
                        .then(function (results) { return _this.passwordResetCompleted(results); })
                        .finally(function () { return _this.isBusy = false; });
                }
            };
            ResetPasswordController.prototype.passwordResetCompleted = function (result) {
                if (result.success) {
                    this.passwordResetSucccessful = true;
                }
                else {
                    this.passwordResetFailed = true;
                    this.passwordResetFailedMessage = result.errorMessage;
                }
            };
            ResetPasswordController.prototype.resetValidationStates = function () {
                this.passwordResetFailed = false;
                this.passwordResetFailedMessage = "";
                this.passwordResetSucccessful = false;
                this.showPasswordError = false;
            };
            return ResetPasswordController;
        }());
        ResetPasswordController.$inject = [
            "accountApi",
            "$routeParams"
        ];
        Chavah.ResetPasswordController = ResetPasswordController;
        Chavah.App.controller("ResetPasswordController", ResetPasswordController);
    })(Chavah = BitShuva.Chavah || (BitShuva.Chavah = {}));
})(BitShuva || (BitShuva = {}));
